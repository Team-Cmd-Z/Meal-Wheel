:root {
  --wheel-font: 'Lato', 'Quicksand', sans-serif;
  --wheel-size: 25rem;
  --wheel-slice-spacing: 50px;
  --wheel-border-size: 5px;
  --wheel-color: #da3768;
  --neutral-color: white;
  --PI: 3.14159265358979;
  --nb-item: 0;
  --item-nb: 0;
  --selected-item: 0;
  --nb-turn: 5;
  --spinning-duration: 4s;
  --reset-duration: 0.25s;
}

/* Conteneur de la roue = cercle rose extérieur */
.wheel-container {
  display: block;
  position: relative;
  box-sizing: content-box;
  width: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
  height: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
  padding: 3px;
  margin: auto;
  background-color: var(--neutral-color);
  border: solid var(--wheel-color) 3px;
  border-radius: 50%;
  user-select: none;
}

/* Triangle de sélection = 1 rose +  1 blanc */
.wheel-container::before,
.wheel-container::after {
  content: '';
  display: block;
  position: absolute;
  height: 0;
  width: 0;
  top: 50%;
  transform: translateY(-50%);
  z-index: 2;
  border: solid transparent 20px;
  border-left-width: 0;
}

.wheel-container::before {
  right: 0px;
  border-right-color: var(--wheel-color);
}

.wheel-container::after {
  right: -5px;
  border-right-color: var(--neutral-color);
}

/* Roue */
.wheel {
  display: block;
  position: relative;
  box-sizing: content-box;
  margin: auto;
  width: var(--wheel-size);
  height: var(--wheel-size);
  overflow: hidden;
  border-radius: 50%;
  border: solid var(--wheel-color) var(--wheel-border-size);
  background-color: var(--wheel-color);
  transition: transform var(--reset-duration);
  transform: rotate(0deg);
  cursor: pointer;
}

.wheel.spinning {
  transition: transform var(--spinning-duration);
  transform: rotate(calc(var(--nb-turn) * 360deg + (-360deg * var(--selected-item) / var(--nb-item, 1))));
}

/* Centre de la roue = rond blanc au centre */
.wheel::after {
  display: block;
  position: absolute;
  content: '';
  background-color: var(--neutral-color);
  width: 25px;
  height: 25px;
  z-index: 2;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

/* Element sur la roue */
.wheel-item {
  display: block;
  position: absolute;
  box-sizing: border-box;

  /* position de l'item */
  top: 50%;
  left: 50%;
  width: 50%;
  transform-origin: center left;
  transform: translateY(-50%) rotate(calc(var(--item-nb) * (360deg / var(--nb-item, 1))));

  /* texte */
  color: var(--neutral-color);
  text-align: right;
  padding: 0 25px 0 50px;
  font-family: var(--wheel-font);
}

/* Background de l'élément = triangle rose plus clair */
.wheel-item:before {
  content: ' ';
  display: block;
  position: absolute;
  box-sizing: border-box;
  z-index: -1;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding-left: 0px;
  opacity: 0.25;

  /* 
    Largeur du triangle
    Je ne sais pas pourquoi j'ai besoin d'ajouter 
      " + var(--wheel-size) / 2 " dans slice-max-width  ==> donne 2.PI.R + R
    mais globalement ca marche a peu près bien 
    TODO: A étudier 
  */
  --slice-max-width: calc(var(--PI) * var(--wheel-size) + var(--wheel-size) / 2);
  --slice-width: calc((var(--slice-max-width) / var(--nb-item)) - var(--wheel-slice-spacing));
  border: solid transparent calc(var(--slice-width) / 2);
  border-left: solid transparent 0;
  /* profondeur du triangle = du centre de la roue à la bordure = 300px / 2 */
  border-right: solid var(--neutral-color) calc(var(--wheel-size) / 2);
}

/* .wheel-container{
  text-align: center;
}

li:first-child .text {
  background-color: red;
}

li:nth-child(2) .text {
  background-color: orange;
}

li:nth-child(3) .text {
  background-color: yellow;
}

li:nth-child(4) .text {
  background-color: green;
}

li:nth-child(5) .text {
  background-color: blue;
}
li:nth-child(6) .text {
  background-color: violet;
}
li:nth-child(7) .text {
  background-color: red;
}
li:nth-child(8) .text {
  background-color: orange;
}
li:nth-child(9) .text {
  background-color: yellow;
}
li:nth-child(10) .text {
  background-color: green;
}

li:nth-child(11) .text {
  background-color: blue;
}

li:nth-child(12) .text {
  background-color: violet;
}
find a way to add colors using a function to make styling dynamic

li:first-child {
  transform: rotate(0deg) skewY(-60deg);
}

li:nth-child(2) {
  transform: rotate(30deg) skewY(-60deg);
}

li:nth-child(3) {
  transform: rotate(60deg) skewY(-60deg);
}

li:nth-child(4) {
  transform: rotate(90deg) skewY(-60deg);
}

li:nth-child(5) {
  transform: rotate(120deg) skewY(-60deg);
}

li:nth-child(6) {
  transform: rotate(150deg) skewY(-60deg);
}

li:nth-child(7) {
  transform: rotate(180deg) skewY(-60deg);
}

li:nth-child(8) {
  transform: rotate(210deg) skewY(-60deg);
}

li:nth-child(9) {
  transform: rotate(240deg) skewY(-60deg);
}

li:nth-child(10) {
  transform: rotate(270deg) skewY(-60deg);
}

li:nth-child(11) {
  transform: rotate(300deg) skewY(-60deg);
}

li:nth-child(12) {
  transform: rotate(330deg) skewY(-60deg);
}

.circle {
  width: 25em;
  height: 25em;
  border: 1px solid black;
  position: relative;
  padding: 0;
  margin: 1em auto;
  border-radius: 50%;
  list-style: none;
  overflow: hidden;
}

li{
  position: absolute;
  overflow: hidden;
  top: 0;
  right: 0;
  width: 50%;
  height: 50%;
  transform-origin: 0% 100%;
}

.text {
  position: absolute;
  left: -100%;
  width: 200%;
  height: 200%;
  text-align: center;
  display: block;
  transform: skewY(60deg) rotate(15deg);
  padding-top: 20px;
  cursor: pointer;
  font-weight: bold;
  font-size: 1rem;
}

.arrow{
  width: 0;
  height: 0;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
  border-top: 50px solid black;
  margin: auto;
  margin-top: 20px;
  position: absolute;
  left: 50%;
  top: -20px;
  z-index: 1;
}

.spin-button {
  position: absolute;
  width: 120px;
  height: 40px;
  background-color: blue;
  border-radius: 30px;
  margin: auto;
  cursor: pointer;
  color: white;
  font-size: 1.5rem;
}

.start-rotate {
  animation: start-rotate 1s linear infinite;
}
@keyframes start-rotate {
  100% {
    transform: rotate(360deg);
  }
}

.stop-rotation {
  animation-play-state: paused;
} */